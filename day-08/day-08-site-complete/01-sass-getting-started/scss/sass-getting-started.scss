@charset "utf-8";
/* CSS Document */

/* Comments in Sass */
/* Multi-line comments work the
   same as in regular CSS. These
   comments will be compiled to 
   the compiled CSS.  */

// Single line comments
// Use "//" to create a single line comment
// Single line comments will not be compiled
// to the compiled CSS file.

// Global Variables
// These will be available anywhere after these 
// varibables are declared

// Colors
$brand-color: #8540c5;
$body-bg-color: #303030;
$wrapper-bg-color: white;
// Text Colors
$text-color-dark: black;
$text-color-light: white;

// Use Color functions to brighten and darken colors
$brand-color-dark: darken($brand-color, 20);
$brand-color-light: lighten($brand-color, 20);

// Fonts
$body-font: Georgia, Times, Times New Roman, serif;
$heading-font: Tahoma, Verdana, Segoe, sans-serif;
// Typographic Defualts
$line-height: 1.4;

// Layout variables
$padding: 30px;
// Grid Values
$gutter: 2;

// Function to determine column width
// takes two numerical parameters:
// $c -> the number of columns in a row
// $g -> the gutter amount
@function colWidth($c, $g: 2){
    @return ((100 - $g * ($c - 1)) / $c) * 1%;
}

$one-col: 100%;
$two-col: colWidth(2);
$three-col: colWidth(3);
$four-col: colWidth(4);
$five-col: colWidth(5);
$six-col: colWidth(6);

// Function to
// Convert Px to Ems
@function em($px, $bc: 16){
    @return #{$px/$bc}em; 
}

// Media Query Breakpoints
$desktopMedium: em(1250);
$tabletLandscape: em(1024);
$tabletPortrait: em(850);
$phoneLandscape: em(670);
$phonePortrait: em(420);

// Utility variables
$link-hover-selector: '&:hover, &:focus, &:active';

// Mixins

// Mixin for centering element
// with margin-left: auto
// and margin-right: auto;
@mixin margin-center {
    margin: {
        left: auto;
        right: auto;
    }
}

// Mixin for clearing out
// margins and padding and
// setting the line-height to 1 
// ...useful mainly on typographic elements
@mixin flatten {
    margin: 0;
    padding: 0;
    line-height: 1;
}

// Visually hide an element but
// still make it accessible to 
// a screen reader
@mixin visually-hidden {
    margin: -1px;
    padding: 0;
    width: 1px;
    height: 1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    clip: rect(0, 0, 0, 0);
    position: absolute;
}

// Clear margins
@mixin first-last-el-no-margin {
    > :first-child {
        margin-top: 0;
    }
    > :last-child {
        margin-bottom: 0;
    }
}

@mixin first-el-no-margin {
    > :first-child {
        margin-top: 0;
    }
}

@mixin last-el-no-margin {
    :last-child {
        margin-bottom: 0;
    }
}

// Mixin for setting foreground
// images to cover their container
// without distortion of the 
// image
// using object-fit cover
@mixin img-cover($abs-pos: true){
    @if($abs-pos){
        position: absolute;
        top: 0;
        left: 0;
    }
    object-fit: cover;
    width: 100%;
    height: 100%;
    display: block;
}

// Mixin for having an element
// sit on top of another and
// and cover the parent element
// completely
@mixin el-cover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

// Mixin to set links
// to not have their
// default look
@mixin plain-link($c: white){
    text-decoration: none;
    color: $c;
}

// Function to set text-color to
// a light colour or a dark
// colour depending on the 
// provided background color;
@function contrast-text-color($bgc, $ltc: white, $dtc: black){
    @if(lightness($bgc) > 50){
        @return $dtc; // lighter background
    } @else {
        @return $ltc; // darker background 
    }
}

// Layout Mixins

// Mixins for creating a flex row of
// and evenly spacing out the
// elements along the row
@mixin flex-layout-row {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

// Center elements in a flex
// container
@mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

// Aspect Ratio Presets
$ar-video: (9 / 16) * 100%;
$ar-square: (1 / 1) * 100%;
$ar-cinemamatic: (9 / 21) * 100%;


// Function to generate aspect
// ratio percentages
@function rp($w, $h){
    @return ($h / $w) * 100%;
}

// Aspect Ratios
$aspect-ratios: (
    'video': rp(16, 9),
    'square': rp(1,1),
    'cinema': rp(21,9),
    'photo': rp(1,1)
);

// Aspect Ratio Boxes Mixin
// This defaults to a square 
// aspect ratio
@mixin aspect-ratio-box($ar) {

    $ratio: 100%;

    @if map_has_key($aspect-ratios, $ar) {
        $ratio: map_get($aspect-ratios, $ar);
    } 

    position: relative;

    &:before {
        content: "";
        width: 1px;
        margin-left: -1px;
        float: left;
        height: 0;
        padding-top: $ratio;
    }
     
    &:after { 
        content: "";
        display: table;
        clear: both;
    }

}

// Placeholder styles
// Similar to mixins but without
// parameters
%row-item {
    width: $two-col;
    padding: $padding;
    @include first-last-el-no-margin;
    border: 1px dotted #ccc;
    @media (max-width: $phoneLandscape){
        width: $one-col;
        margin-bottom: 8%;
        &:last-child {
            margin-bottom: 0;
        }
    }
}

// Resets

// Box Sizing Reset
html {
    box-sizing: border-box;
}

*, *:before, *:after {
    box-sizing: inherit;
}

// Image Reset
img {
    max-width: 100%;
    height: auto;
}

// Table Reset
table {
	border-collapse: collapse;
	border-spacing: 0;
}

// Remove Margins on the body
body {
    margin: 0;
}

// Typography Styles
body {
    font-family: $body-font;
    line-height: $line-height;
}

h1, h2, h3, nav a, table {
    font-family: $heading-font;
}

// Body Styles
body {
    background-color: $body-bg-color;
}

// Wrapper styles
.wrapper {
    max-width: 860px;
    @include margin-center;
    background-color: $wrapper-bg-color;
}

// Header styles
header {
    background-color: $brand-color;
    padding: $padding/2 $padding;
    @include flex-layout-row;
    align-items: center;

    h1 {
        @include flatten;
        color: $text-color-light;
        @media (max-width: $phoneLandscape){
            font-size: 1.6em;
        }
    }
}

// Hamburger Styles
.hamburger {

    display: none;

    @media (max-width: $phoneLandscape){
        display: block;
        width: 40px;
        background-color: transparent;
        border: none;
        padding: 0;
        cursor: pointer;
    
        .hamburger-content {
            height: 24px;
        }

        .text {
            @include visually-hidden;
        }

        .bar {
            $transition: all 0.3s ease-in-out;
            $bar-height: 4px;
            @mixin bar($pos-neg: '') {
                content: "";
                width: 100%;
                height: $bar-height;
                top: #{$pos-neg}10px;
                left: 0;
                background-color: white;
                position: absolute;
                transition: $transition;
                .show & {
                    top: 0;
                    transform: rotate(#{$pos-neg}45deg);
                }
            }

            display: block;
            height: $bar-height;
            background-color: $text-color-light;
            width: 100%;
            position: relative;
            top: 10px;
            transition: $transition;

            .show & {
                background-color: transparent;
            }

            &:after {
               @include bar;
            }
            &:before {
                @include bar('-');
            }
        }

        &:focus,
        .hamburger-content:focus {
            outline: none;
        }

        &:focus .hamburger-content {
            outline: 5px solid #7683C9;
        }
    
    }
}

nav {
    // locally scoped variable
    $height: 40px;
    $border: 1px solid white;
    
    background-color: $brand-color-dark;
    height: $height;
    border-top: $border;

    ul {
        @include flatten;
        list-style: none;
        display: flex;
        @media (max-width: $phoneLandscape){
            display: block;
        }
    }

    li {
        flex: 1;
    }

    a {
        display: block;
        color: $text-color-light;
        border-right: $border;
        line-height: $height;
        text-align: center;
        font-size: 1.2em;
        text-decoration: none;
        outline: none;
        
        #{$link-hover-selector} {
            background-color: rgba(white, 0.3);
        }

        @at-root nav li:last-child a {
            border-right: none;
        }

    }

    @media (max-width: $phoneLandscape) {
        display: none;
        height: auto;
        border-top: none;

        .show & {
            display: block;
        }

        a {
            line-height: 50px;
            border-right: none;
            border-top: $border;
        }
        
    }

}

// Main Styles
main {
    padding: $padding;    

    section:not(:first-child) {
        margin-top: $padding;
    }
    
}

// Info Section styles
.info {
    
    @include first-last-el-no-margin;

    .some-row {
        @include flex-layout-row;
        
        .a-01,
        .a-02 {
            @extend %row-item;
        }
    
    }

}



// Gallery Styles
.image-gallery {

    @include flex-layout-row;

    .image-container {
        width: $three-col;
        font-famiy: $heading-font;
        @include plain-link;
        @include aspect-ratio-box('video');

        img {
            @include img-cover;
        }

        .profile {
           @include el-cover;
           @include flex-center;
           background-color: rgba($body-bg-color, 0.8);
           transform: scale(0);
           transition: 0.3s ease;

           .name,
           .title {
               @include flatten;
           }

           .name {
               margin-bottom: 10px;
           }

           @at-root .image-container:hover .profile, 
                    .image-container:focus .profile {
                        transform: scale(1);
           } 
        }

        @media (max-width: $phoneLandscape){
            width: calc(100% - 30px);
            margin-bottom: 8%;
            @include aspect-ratio-box('square');
            @include margin-center;
            
        }

    }

}

// Data Table styles 
.dt {
    // Data Table Heading Colours
    $table-caption-color: #dadada;
    $table-headings-color: darken($table-caption-color, 20);

    // Data Table Column Colours
    $colour1: rgba(1, 41, 95, 1);
    $colour2: rgba(67, 127, 151, 1);
    $colour3: rgba(132, 147, 36, 1);
    $colour4: rgba(255, 179, 15, 1);
    $colour5: rgba(253, 21, 27, 1);

    // Data Table Column Colour List
    $table-colours-list: $colour1, $colour2, $colour3, $colour4, $colour5;

    // Table Border
    $table-border: 1px solid black;

    // Table Cell padding
    $cell-padding: 10px;

    // Table Styles
    font-family: $heading-font;
    width: $one-col;
    border: $table-border;

    th, td {
        text-align: center;
        padding: $cell-padding;
        border: $table-border;
    }

    caption {
        background-color: $table-caption-color;
        padding: $cell-padding;
        font-size: 1.2em;
        border-right: $table-border;
        border-left: $table-border;
        border-top: $table-border;
    }

    thead tr,
    tfoot tr {
        background-color: $table-headings-color;
    }

    tbody {

        tr {
            @for $i from 1 through length($table-colours-list){
                td:nth-child(#{$i}){
                    background-color: nth($table-colours-list, $i);
                    color: contrast-text-color(nth($table-colours-list, $i));
                    &:hover {
                        $bgc: rgba(nth($table-colours-list, $i), 0.6); 
                        background-color: $bgc;
                        color: contrast-text-color($bgc);
                    }
                }
            }
        }

    }

    @media (max-width: $phoneLandscape) {
        th, td {
            text-align: left;
        }
        
        tbody {
            tr {
                &:nth-child(even){
                    background-color: lightblue;
                }
                &:nth-child(odd){
                    background-color: pink;
                }
            }
            td {
                display: block;
                &:before {
                    content: attr(data-th) ": ";
                    display: inline-block;
                    margin-right: 10px;
                    font-weight: bold;
                }
                @at-root .dt tbody tr td:nth-child(1n){
                    background-color: transparent;
                    color: black;
                    &:hover {
                        background-color: rgba(white, 0.5);
                        color: black;
                    }
                }
            }    
        }

        th {
            display: none;
        }
          
    }

}

// More Stuff section
// Just practice @extend
.more-stuff {
    
    background-color: rgba(pink, 0.3);
    padding: $padding;
    @include first-last-el-no-margin;
    
    .different-row {
        @include flex-layout-row;
    }

    .a-03,
    .a-04,
    .a-05,
    .a-06 {
        @extend %row-item;
        margin-bottom: 2%;
        background-color: lightyellow;
        @media (max-width: $phoneLandscape){
            margin-bottom: 8%;
        }
    }

}

// Footer Styles
footer {
    padding: $padding;
    border-top: 1px dotted $body-bg-color;
    p {
        @include flatten;
    }
}


